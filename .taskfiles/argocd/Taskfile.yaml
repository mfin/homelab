---
version: '3'

tasks:
  login:
    desc: Login to ArgoCD
    dir: '{{.dir}}'
    silent: true
    vars:
      url:
        sh: sops -d {{.sopsFile}} | yq .argocd_url
    cmds:
      - kubectl config set-context --current --namespace {{.namespace}}
      - argocd login --core {{.url}}

  sync:
    desc: Sync ArgoCD Application
    dir: '{{.dir}}'
    silent: true
    cmds:
      - echo "Syncing Application {{.name}} ..."
      - argocd app sync {{.name}}

  pause:
    desc: Pause ArgoCD Application
    dir: '{{.dir}}'
    silent: true
    cmds:
      - echo "Pausing Application {{.name}} ..."
      - |
        kubectl -n {{.namespace}} patch application {{.name}} --type=json -p="[{'op': 'remove', 'path': '/spec/syncPolicy/automated'}]"

  resume:
    desc: Resume ArgoCD Application
    dir: '{{.dir}}'
    silent: true
    cmds:
      - echo "Resuming Application {{.name}} ..."
      - |
        kubectl -n {{.namespace}} patch application {{.name}} --type=json -p="[{'op': 'add', 'path': '/spec/syncPolicy/automated', 'value': {'prune': true, 'selfHeal': true}}]"

  pause-all:
    desc: Pause all ArgoCD Applications
    silent: true
    vars:
      resumed:
        sh: kubectl get application -n {{.namespace}} -ojson | jq -r '.items[] | select(.spec.syncPolicy.automated != null) | .metadata.name' | tr '\n' ' '
    cmds:
      - task: pause
        vars:
          name: "{{.resumed}}"
    preconditions:
      - sh: test -n "{{.resumed}}"
        msg: "No apps to pause"

  resume-all:
    desc: Resume all ArgoCD Applications
    silent: true
    vars:
      paused:
        sh: kubectl get application -n {{.namespace}} -ojson | jq -r '.items[] | select(.spec.syncPolicy.automated == null) | .metadata.name' | tr '\n' ' '
    cmds:
      - task: resume
        vars:
          name: '{{.paused}}'
    preconditions:
      - sh: test -n "{{.paused}}"
        msg: "No apps to resume"
