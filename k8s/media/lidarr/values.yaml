app-template:
  controllers:
    main:
      replicas: 1
      type: statefulset
      containers:
        main:
          image:
            repository: ghcr.io/onedr0p/lidarr-develop
            tag: 2.3.3.4204@sha256:85bb890dab6ca3bf4356c49a1b6d7620ec8c85f12cff08a35a8c62bd41271ec9
          env:
            TZ: Europe/Ljubljana
            LIDARR__INSTANCE_NAME: Lidarr
            LIDARR__PORT: &port 80
            LIDARR__LOG_LEVEL: info
          resources:
            requests:
              cpu: 10m
              memory: 250Mi
            limits:
              memory: 1000Mi
      pod:
        securityContext:
          runAsUser: 1028
          runAsGroup: 100
          fsGroup: 100
          fsGroupChangePolicy: "OnRootMismatch"
  service:
    main:
      ports:
        http:
          port: *port
  ingress:
    main:
      enabled: true
      className: internal
      annotations:
        nginx.ingress.kubernetes.io/auth-method: GET
        nginx.ingress.kubernetes.io/auth-url: http://authelia.authelia.svc.cluster.local/api/verify
        nginx.ingress.kubernetes.io/auth-response-headers: Remote-User,Remote-Name,Remote-Groups,Remote-Email
        nginx.ingress.kubernetes.io/auth-snippet: proxy_set_header X-Forwarded-Method $request_method;
  persistence:
    config:
      enabled: true
      existingClaim: lidarr
    data:
      enabled: true
      type: nfs
      path: /volume1/data
      globalMounts:
        - path: /data
