app-template:
  controllers:
    main:
      replicas: 1
      type: statefulset
      containers:
        main:
          image:
            repository: docker.io/filebrowser/filebrowser
            tag: v2.27.0
          env:
              TZ: Europe/Ljubljana
              FB_DATABASE: "/config/filebrowser.db"
              FB_ROOT: "/data"
              FB_LOG: "stdout"
              FB_NOAUTH: "true"
          probes:
            liveness: &probes
              enabled: true
              custom: true
              spec:
                httpGet:
                  path: /health
                  port: &port 80
                initialDelaySeconds: 0
                periodSeconds: 10
                timeoutSeconds: 1
                failureThreshold: 3
            readiness: *probes
            startup:
              enabled: false
          resources:
            requests:
              cpu: 10m
              memory: 250Mi
            limits:
              memory: 1000Mi

      pod:
        securityContext:
          runAsUser: 1028
          runAsGroup: 100
          fsGroup: 100
          fsGroupChangePolicy: "OnRootMismatch"
  service:
    main:
      ports:
        http:
          port: *port
  ingress:
    main:
      enabled: true
      className: internal
      annotations:
        nginx.ingress.kubernetes.io/auth-method: GET
        nginx.ingress.kubernetes.io/auth-url: http://authelia.authelia.svc.cluster.local/api/verify
        nginx.ingress.kubernetes.io/auth-response-headers: Remote-User,Remote-Name,Remote-Groups,Remote-Email
        nginx.ingress.kubernetes.io/auth-snippet: proxy_set_header X-Forwarded-Method $request_method;
        hajimari.io/enable: "true"
        hajimari.io/icon: mdi:folder-play-outline
        hajimari.io/appName: Files
        hajimari.io/info: Browser for media files
  persistence:
    config:
      enabled: true
      existingClaim: filebrowser
    configmap:
      enabled: true
      type: configMap
      name: filebrowser
      globalMounts:
        - path: /.filebrowser.json
          subPath: .filebrowser.json
          readOnly: true
    data:
      enabled: true
      type: nfs
      path: /volume1/data
      globalMounts:
        - path: /data
