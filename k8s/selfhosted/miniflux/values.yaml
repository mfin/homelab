initContainers:
  01-init-db:
    image: ghcr.io/onedr0p/postgres-init:14.8
    imagePullPolicy: IfNotPresent
    envFrom:
      - secretRef:
          name: postgres
controller:
  replicas: 1
  strategy: RollingUpdate
  annotations:
    reloader.stakater.com/auto: "true"
image:
  repository: ghcr.io/miniflux/miniflux
  tag: 2.0.44
env:
  CREATE_ADMIN: "1"
  DEBUG: "1"
  LOG_DATE_TIME: "1"
  METRICS_ALLOWED_NETWORKS: "10.42.0.0/16"
  METRICS_COLLECTOR: "1"
  OAUTH2_CLIENT_ID: miniflux
  OAUTH2_USER_CREATION: "1"
  OAUTH2_PROVIDER: oidc
  POLLING_SCHEDULER: entry_frequency
  POLLING_FREQUENCY: "15"
  RUN_MIGRATIONS: "1"
envFrom:
  - secretRef:
      name: miniflux
service:
  main:
    ports:
      http:
        port: &port 8080
serviceMonitor:
  main:
    enabled: true
ingress:
  main:
    enabled: true
    ingressClassName: nginx
    annotations:
      external-dns.alpha.kubernetes.io/target: ingress.devbu.io
      hajimari.io/icon: mdi:rss
    hosts:
      - host: &host "{{ .Release.Name }}.devbu.io"
        paths:
          - path: /
            pathType: Prefix
    tls:
      - hosts:
          - *host
probes:
  liveness: &probes
    enabled: true
    custom: true
    spec:
      httpGet:
        path: /healthcheck
        port: *port
      initialDelaySeconds: 0
      periodSeconds: 10
      timeoutSeconds: 1
      failureThreshold: 3
  readiness: *probes
  startup:
    enabled: false
resources:
  requests:
    cpu: 10m
    memory: 100Mi
  limits:
    memory: 750Mi
